
		자바의 기본 타입
		정수 타입 - byte, char, short, int, long
		실수 타입 - float, double
		논리 타입 - boolean
		
		정수 타입
		자바에서 정수 타입은 총 5개로 다음과 같이 메모리 사용 크기와 저장되는 값의 범위가 서로 다르다.
		byte	1byte	8bit	(-128 ~ 127)
		short	2byte	16bit	(-32,768 ~ 32,767)
		char	2byte	16bit	(0 ~ 65535{유니코드})
		int		4byte	32bit	(약 -21억 ~ 21억)
		long	8byte	64bit	( ... {매우 크다})
		
		//char타입은 음수를 가질 수 없다.
		
		//byte 타입 변수
		byte var1 = -128;
		byte var2 = -30;
		byte var3 = 0;
		byte var4 = 30;
		byte var5 = 127;
		//byte var6 = 128;		//컴파일 에러 ( byte의 저장되는 값의 범위를 벗어남 )
		
		System.out.println(var1);
		System.out.println(var2);
		System.out.println(var3);
		System.out.println(var4);
		System.out.println(var5);

		//기본적으로 컴파일러는 정수 리터럴을 int타입으로 간주한다 그래서 정수 리터럴이 int타입의 허용 범위를 초과할 경우,
		//long 타입임을 컴퓨터에게 알려줘야 하는데 숫자 뒤에 L을 붙이면 된다(소문자 l은 1과 비슷하므로 사용하지 않는다)
		//정수 리터럴이 int허용 범위 안이라면 L을 굳이 붙이지 않아도 된다.
		
		long v1 = 10;
		long v2 = 20L;
		long v3 = 10000000000; //컴파일 에러 long으로 선언했으나 리터럴을 int타입으로 간주하여 int범위를 벗어나 에러가 뜬다.
		long v4 = 10000000000L;
		int v5 = 10000000000L; //int에 L을 적는다고해서 사용 가능해 지지는 않음
		
		String 타입
		
		작은따옴표로 감싼 문자는 char 타입 변수에 저장되어 유니코드로 저장되지만 큰 따옴표로 감싼 문자 또는 여러개의 문자들은 유니코드로 변환되지 않는다. 
		
		char var1 "A";
		char var2 = "홍길동";
		
		위 두 코드는 잘못된 코드이다.
		
		자바에서 큰 따옴표로 감싼 문자들을 문자열이라고 부른다. 작은따옴표와 큰 따옴표는 컴파일러가 문자리터럴과 문자열 리터럴을 구별하는 기호로 사용된다.
		문자열을 변수에 저장하고 싶다면 String 타입을 사용해야 한다.
		
		String = "A";
		String = "gil dong";
		String 타입은 기본 타입이 아닌 클래스 타입으로 나중에 상세히 배울 수 있음.
		
		문자열 내부에 역슬래시가 붙은 문자를 사용할 수 있는데, 이것을 이스케이프 문자 라고 한다. 이스케이프 문자를 사용하면
		문자열 내부에 특정 문자를 포함시킬 수 있다. ex) \" 
		또한 출력을 제어할 수 있는데 |t (탭기능 - 문자 사이 띄우는것) \n (개행기능 - 한줄내림)을 지시할 수 있다.
		
		실수 타입
		
		소수점이 있는 실수 리터럴을 저장할 수 있는 타입에는 float과 double가 있다. float은 4바이트 double는 8바이트의 크기를 저장한다.
		소스 코드에서 소수점이 있는 숫자 리터럴은 10진수 실수로 인식한다.
		또한 알파벳 소문자 e또는 대문자 E가 포함되어 있는 숫자 리터럴은지수와 가수로 표현된 소수점이 있는 10진수 실수로 인식합니다.
		ex) 5e2 > 5.0 * 10^2 = 500.0
		자바는 실수 리터럴을 기본적으로 double 타입으로 해석 하기 때문에 double타입에 저장해야 한다. float 타입에 저장하려면 뒤에 f나 F를 붙여 컴파일러가 float타입임을 알게 해야한다.
		
		논리타입
		
		자바는 참과 거짓을 의미하는 논리 리터럴로 true와 false를 사용합니다. 논리 리터럴은 다음과 같이 1byte 크기의 boolean타입 변수에 저장할 수 있습니다.
		
		booolean stop = true;
		boolean state = false;
		
		boolean 타입 변수는 주로 두 가지 상태값에 따라 조건문과 제어문의 실행 흐름을 변경하는데 사용된다.
		
		
		5가지 키워드로 끝내는 핵심 포인트
		
		- 정수 타입		:	정수를 저장할 수 있는 타입으로 byte, short, int, long(int 사용범위 벗어나면 뒤에 L을 붙여줌) 타입을 말합니다.
		- char 타입		:	작음따옴표로 감싼 하나의 문자 리터럴을 저장할 수 있는 타입니다.
		- String 타입		:	큰따옴표로 감싼 문자열을 저장할 수 있는 타입
		- 실수 타입		:	실수를 저장할 수 있는 타입으로 float(실수 리터럴은 기본적으로 double 따라서 float을 사용할땐 뒤에 f나 F를 붙여서 float인지를 컴파일러가 알게 해야함), double 타입을 말한다.
		- boolean 타입	:	참과 거짓을 의미하는 true와 false를 저장할 수 있는 타입이다.
		
		
		확인 문제
		
		Q1. 다음은 메모리 사용크기별로 자바의 기본 타입을 구분한 것입니다. 빈 칸에 자바의 기본 타입 8개를 적어보세요.
		
					1byte	2byte	4byte	8byte
		정수 타입		byte	char	int		long
							short
		실수 타입						float	double
		논리 타입		boolean
		
		Q2. 변수에 값을 저장하는 코드입니다. 맞는 것에 O표, 틀린 것에 X표 하세요.
		
		byte var = 200;						( X )	>byte는 양수 127까지만 출력
		char var = 'AB';					( X )	>char는 문자 한개 AB는 문자 열이라고할 수 있음.
		char var = 65;						( O )	>아스키코드로 A가 출력될 것임.
		long var = 50000000000;				( X )	>정수의 리터럴은 int가 기본 int의 범위(양수 약 21억)를 벗어난 500억이란 숫자는 뒤에 L을 붙여 줘야함.
		float var = 3.14;					( X )	>실수의 리터럴은 double float을 썻을때는 F나 f를 뒤에 붙여줘야 함.
		double var = 100.0					( O )	>이상 없음
		String var = "나의 직업은 "개발자"입니다.	( X )	>문자열 안에 ""를 사용할 수 없음.
		boolean var = 0;					( X )	>boolean은 true와 false 두개의 값만 사용 가능 0 과 1이 true와 false를 대신하지 않음
		int v2 = le2;						( X )	>1e2는 실수를 표현할때 쓰임
		float = 1e2f;						( X )	>변수명이 선언되지 않음.
		
		Q3. 다음 코드를 실행했을 때 콘솔에 출력되는 내용은 무엇입니까?
		
		System.out.println("자바는");
		System.out.println("\n재미있는 \"프로그래밍\" 언어\n);
		System.out.println("입니다."); 
		
		출력 내용
		
		자바는
		
		
		재미있는 "프로그래밍" 언어
		
		
		입니다.
		
		
		Q4. 다음 코드는 컴파일 에러가 발생합니다. 그 이유가 무엇입니까?
		
		double value = 2e-350;		> -350지수는 double의 범위를 벗어나 2라는 숫자가 출력 될 수 없음.
		
		Q5. 다음 코드를 실행했을 때 출력되는 내용은 무엇입니까?
		
		boolean stop = false;
		if(stop) {
			System.out.println("멈춥니다.");
		} else {
			System.out.println("출발합니다.");
		}
		
		stop이 거짓이므로 else 의 실행문인 출발합니다. 가 출력될 것
		
		
		
		

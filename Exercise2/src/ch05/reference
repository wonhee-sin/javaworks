참조변수

기본 타입 : byte, short, char, int, long, float, double, boolean 타입을 말하며 이들 타입의 변수에는
			값 자체가 저장된다

참조타입 : 기본 타입을 제외한 배열, 열거, 클래스,인터페이스 등을 말한다. 참조 타입의 변수에는
		 객체의 번지가 저장된다. 번지로 객체를 잠조한다는 의미에서 참조 타입이라고 한다.

메모리 사용 역역 : JVM은 운영체제에서 할당받은 메모리 영역을
			   메소드 영역, 힙영역, 스택영역으로 구분해서 사용한다. 메소드 영역에는 정적 필드, 상수, 메소드코드, 생성자코드가
			   위치하며, 힘 영역에는 객체가 생성된다. 그리고 스택 영역에는 변수가 생선된다.

번지 비교 : 비교 연산자가 기본타입에서 사용되면 값을 비교하지만, 참조 타입에서 사용되면 번지를 비교한다.
		  이때 ==이 true가 나오면 같은 객체를 참조한다는 뜻이고 false가 나오면 다른객체를 참조한다는 뜻이다.
		  
null : 참조 타입 변수는 객체를 참조하지 않는다는 뜻이로 null값을 가질 수 있다. null값도 초기값으로
		사용할 수 있기 때문에 null로 초기화된 참조 변수는 스택 영역에 생선된다.

NullPonterException : 참조 변수가 null을 가지고 있을 경우에는, 참조 객체가 없으므로 참조 변수를 통해
					  객체를 사용할 수 없다. 만약 null인 참조변수를 통해 있지도 않는 객체의 필드나 메소드를 사용하면
					  NullPointerException이 발생한다.
					  
Q1. 참조 타입에 대한 설명이다. 맞는것에 o표 틀린것에 x표 하라

1. 참조 타입에는 배열, 열거, 클래스, 인터페이스가 있다. O
2. 참조 변수의 메모리 생성 위치는 스택이다. O
3. 참조 타입에서 ==, !=연산자는 객체 번지를 비교한다. O
4. 참조 변수는 null 값으로 초기화할 수 없다. X

Q2. 자바에서 메모리 사용에 대한 설명 중 맞는 것에 O표, 틀린 것에  X표 하세요.

1.로컬 변수는 스택 영역에 생성되며 실행 블록이 끝나면 소멸된다. O
2.상수, 메소드코드, 생성자코드는 메소드 영역에서 생성된다. O
3.참조되지 않는 객체는 프로그램에서 직접 소멸 코드를 작성하는 것이 좋다. X
4.배열 및 객체는 힙 영역에 생성된다. O

Q3. String 타입에 대한 설명 중 맞는 것에 O표, 틀린 것에 X표 하세요.

1.String은 클래스이므로 참조 타입니다. O
2.String의 문자열 비교는 ==를 사용해야 한다. X
3.동일한 문자열 리터럴을 저장하는 변수는 동일한 String 객체를 참조한다 O
4.new String("문자열")은 무조건 새로운 String 객체를 생성한다. O

Q4. 참조 변수에 대한 설명입니다. 맞는 것에 O표 틀린것에 X표 하세요

1.참조 변수에 저장되는 것은 객체의 번지이다.	O
2.참조 변수에 null을 저장해서 변수를 초기화시킬 수 있다.	O
3.참조 변수에 null이 저장된 상태에서는 객체를 사용할 수 없다.	O
4.NullPinterException은 초기화되지 않는 참조 변수에서 발생한다.	X

Q5. 다음 코드를 보고 비교 연산식과 메소드의 실행결과를 빈 칸에 기술하세요.

int var1 = 10;
int var2 = 10;
String var3 = "AB";
String var4 = "AB";
String var5 = new String("AB");

1 var1 == var2 	true
2 var1 != var2	false
3 var3 == var4	true
4 var4.equals(var5)	true
5 var3 != var5 true

	 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 